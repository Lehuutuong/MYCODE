/////////////////////////////////////////////////////////////////////////////////////////////
//
//
//								Endian.c
//
//		This file is created Code 2007.8.12 (8/12/2007)
//		comment is written in Korean.
//
//	This is a implement file for Endian process.
//
//	abbreviation keywords:
//
//		
//
//	Modified History:
//
//		2007-8-18	:	created by CZC.
//
/////////////////////////////////////////////////////////////////////////////////////////////
#include "stdafx.h"

#include "SMDefs.h"
#include "Endian.h"

/* ===============================================================================================

창조시간 :	2007년 8월 23일   15시03분

함수설명:	-----------------	MirrorBytes16 

    16비트 엔디안 한다.

파라미터:

	설명 약함.

리턴 값:

    설명 약함.

=============================================================================================== */
unsigned __int16 MirrorBytes16 (unsigned __int16 x)
{
	return (x << 8) | (x >> 8);
}

/* ===============================================================================================

창조시간 :	2007년 8월 23일   15시04분

함수설명:	-----------------	MirrorBytes32

    32비트 엔디안 한다.

파라미터:

	설명 약함.

리턴 값:

    설명 약함.

=============================================================================================== */
unsigned __int32 MirrorBytes32 (unsigned __int32 x)
{
	unsigned __int32 n = (unsigned __int8) x;
	n <<= 8; n |= (unsigned __int8) (x >> 8);
	n <<= 8; n |= (unsigned __int8) (x >> 16);
	return (n << 8) | (unsigned __int8) (x >> 24);
}

/* ===============================================================================================

창조시간 :	2007년 8월 23일   15시04분

함수설명:	-----------------	MirrorBytes64

    64비트 엔디안 한다.

파라미터:

	설명 약함.

리턴 값:

    설명 약함.

=============================================================================================== */
unsigned __int64 MirrorBytes64 (unsigned __int64 x)
{
	unsigned __int64 n = (unsigned __int8) x;
	n <<= 8; n |= (unsigned __int8) (x >> 8);
	n <<= 8; n |= (unsigned __int8) (x >> 16);
	n <<= 8; n |= (unsigned __int8) (x >> 24);
	n <<= 8; n |= (unsigned __int8) (x >> 32);
	n <<= 8; n |= (unsigned __int8) (x >> 40);
	n <<= 8; n |= (unsigned __int8) (x >> 48);
	return (n << 8) | (unsigned __int8) (x >> 56);
}

/* ===============================================================================================

창조시간 :	2007년 8월 23일   15시06분

함수설명:	-----------------	LongReverse

    32비트 단위로 뒤집기.

파라미터:

	설명 약함.

리턴 값:

    설명 약함.

=============================================================================================== */
void
LongReverse (unsigned __int32 *buffer, unsigned byteCount)
{
	unsigned __int32 value;

	byteCount /= sizeof (unsigned __int32);
	while (byteCount--)
	{
		value = *buffer;
		value = ((value & 0xFF00FF00L) >> 8) | \
		    ((value & 0x00FF00FFL) << 8);
		*buffer++ = (value << 16) | (value >> 16);
	}
}
